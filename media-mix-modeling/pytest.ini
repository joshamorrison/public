[tool:pytest]
# Media Mix Modeling Test Configuration

# Test discovery
testpaths = tests
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Output options
addopts = 
    --verbose
    --tb=short
    --strict-markers
    --disable-warnings
    --color=yes
    --durations=10
    --cov=src
    --cov-report=html:htmlcov
    --cov-report=term-missing
    --cov-report=xml
    --cov-fail-under=80

# Markers for test categorization
markers =
    unit: Unit tests (fast, no external dependencies)
    integration: Integration tests (moderate speed, may use external services)
    e2e: End-to-end tests (slow, full system tests)
    performance: Performance and benchmark tests
    slow: Tests that take significant time to run
    airflow: Tests for Airflow DAGs and workflows
    aws: Tests requiring AWS services or mocking
    dbt: Tests for dbt models and transformations
    r_integration: Tests for R model integration
    api: API endpoint tests
    models: ML model tests
    attribution: Attribution model tests
    optimization: Budget optimization tests
    data: Data processing and validation tests

# Test collection options
minversion = 6.0
required_plugins = 
    pytest-cov
    pytest-mock
    pytest-asyncio
    pytest-xdist

# Asyncio configuration
asyncio_mode = auto

# Warnings configuration
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::FutureWarning:pandas.*
    ignore::UserWarning:sklearn.*

# Logging configuration
log_cli = false
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

log_file = tests.log
log_file_level = DEBUG
log_file_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s (%(filename)s:%(lineno)d)
log_file_date_format = %Y-%m-%d %H:%M:%S

# Test timeout (in seconds)
timeout = 300

# Parallel execution
# Use with: pytest -n auto
distributed = true