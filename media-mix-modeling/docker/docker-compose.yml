version: '3.8'

services:
  mmm-api:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    ports:
      - "8000:8000"
    environment:
      - ENVIRONMENT=production
      - LOG_LEVEL=info
      - API_PREFIX=/api/v1
    volumes:
      - ../data:/app/data:ro
      - ../outputs:/app/outputs
      - ../logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health/live"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    command: redis-server --appendonly yes

  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: mmm
      POSTGRES_USER: mmm_user
      POSTGRES_PASSWORD: mmm_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ../infrastructure/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: unless-stopped

  mlflow:
    image: python:3.11-slim
    ports:
      - "5000:5000"
    environment:
      - MLFLOW_BACKEND_STORE_URI=postgresql://mmm_user:mmm_password@postgres:5432/mlflow
      - MLFLOW_DEFAULT_ARTIFACT_ROOT=/mlflow/artifacts
    volumes:
      - mlflow_artifacts:/mlflow/artifacts
      - ../mlruns:/mlflow/mlruns
    depends_on:
      - postgres
    restart: unless-stopped
    command: >
      sh -c "
        pip install mlflow psycopg2-binary &&
        mlflow server --host 0.0.0.0 --port 5000 --backend-store-uri postgresql://mmm_user:mmm_password@postgres:5432/mlflow --default-artifact-root /mlflow/artifacts
      "

volumes:
  redis_data:
  postgres_data:
  mlflow_artifacts: