# Development Dockerfile for Generative Econometric Forecasting Platform
FROM python:3.11-slim

# Set environment variables
ENV PYTHONUNBUFFERED=1
ENV PYTHONDONTWRITEBYTECODE=1
ENV DEBIAN_FRONTEND=noninteractive

# Set working directory
WORKDIR /app

# Install system dependencies including development tools
RUN apt-get update && apt-get install -y \
    gcc \
    g++ \
    curl \
    wget \
    git \
    vim \
    nano \
    tree \
    htop \
    build-essential \
    libssl-dev \
    libffi-dev \
    libbz2-dev \
    libreadline-dev \
    libsqlite3-dev \
    libncurses5-dev \
    libncursesw5-dev \
    xz-utils \
    tk-dev \
    libxml2-dev \
    libxmlsec1-dev \
    libffi-dev \
    liblzma-dev \
    && rm -rf /var/lib/apt/lists/*

# Install R for statistical modeling
RUN apt-get update && apt-get install -y \
    r-base \
    r-base-dev \
    && rm -rf /var/lib/apt/lists/*

# Install R packages
RUN R -e "install.packages(c('vars', 'forecast', 'urca', 'tseries', 'devtools'), repos='http://cran.rstudio.com/')"

# Create non-root user with sudo for development
RUN useradd -m -u 1000 -s /bin/bash appuser && \
    apt-get update && apt-get install -y sudo && \
    echo "appuser ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers && \
    rm -rf /var/lib/apt/lists/*

USER appuser

# Copy requirements
COPY --chown=appuser:appuser requirements.txt .
COPY --chown=appuser:appuser pyproject.toml .

# Install Python dependencies including development tools
RUN pip install --no-cache-dir --user -r requirements.txt
RUN pip install --no-cache-dir --user \
    pytest \
    pytest-cov \
    pytest-asyncio \
    black \
    flake8 \
    mypy \
    ipython \
    jupyter \
    debugpy

# Copy application code
COPY --chown=appuser:appuser . .

# Create necessary directories
RUN mkdir -p outputs/reports outputs/analytics data/samples data/schemas logs

# Expose ports for API and Jupyter
EXPOSE 8000 8888 5678

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:8000/health/status || exit 1

# Development command with auto-reload
CMD ["python", "-m", "api.main", "--host", "0.0.0.0", "--port", "8000", "--reload"]