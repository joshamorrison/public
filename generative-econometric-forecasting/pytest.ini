[tool:pytest]
# Pytest configuration for Generative Econometric Forecasting Platform

# Test discovery
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Add project root to Python path
pythonpath = .

# Markers for test categorization
markers =
    slow: marks tests as slow (deselect with '-m "not slow"')
    integration: marks tests as integration tests
    api: marks tests as API tests
    performance: marks tests as performance tests
    unit: marks tests as unit tests
    e2e: marks tests as end-to-end tests

# Minimum coverage requirements
addopts = 
    --strict-markers
    --strict-config
    --verbose
    --tb=short
    --cov=src
    --cov=api
    --cov=data
    --cov=models
    --cov-report=term-missing
    --cov-report=html:htmlcov
    --cov-fail-under=80
    --durations=10

# Filter warnings
filterwarnings =
    ignore::UserWarning
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::FutureWarning

# Logging configuration for tests
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Test timeouts
timeout = 300
timeout_method = thread

# Parallel execution
# Run with: pytest -n auto
# Requires pytest-xdist: pip install pytest-xdist